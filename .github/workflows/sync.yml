name: Sync Rules & Mirror Repositories

on:
  workflow_dispatch:
  repository_dispatch:
    types: [trigger-sync-cycle]  # 接收来自check-rules的循环触发
  schedule:
    # 每小时的第5分钟执行（作为工作流链的起点）
    - cron: '5 * * * *'

# 并发控制，避免重复同步
concurrency:
  group: sync-workflow
  cancel-in-progress: false  # 不取消正在进行的任务
  
jobs:
  Sync-Rules:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Install Dependencies
      run: |
        npm install
        
    - name: Run Sync Script
      run: npm run sync
      env:
        TZ: 'Asia/Shanghai'
        
    - name: Commit Changes
      run: |
        if [[ -n $(git status -s) ]]; then
          git config --local user.email "rin.tohsaka@fate-stay-night.com"
          git config --local user.name "Rin Tohsaka"
          git add .
          git commit -m "✨ Auto Update by Rin $(TZ='Asia/Shanghai' date +'%Y-%m-%d %H:%M')"
          
          # 安全推送：处理可能的远程更改
          max_retries=3
          retry_count=0
          while [ $retry_count -lt $max_retries ]; do
            if git push; then
              echo "推送成功"
              break
            else
              echo "推送失败，尝试同步远程更改... (尝试 $((retry_count + 1))/$max_retries)"
              git pull --rebase || {
                echo "Rebase失败，使用merge策略"
                git pull --no-rebase
              }
              retry_count=$((retry_count + 1))
              if [ $retry_count -eq $max_retries ]; then
                echo "达到最大重试次数，推送失败"
                exit 1
              fi
            fi
          done
        fi

    - name: Cleanup Workflow Runs
      uses: Mattraks/delete-workflow-runs@main
      with:
        retain_days: 0
        keep_minimum_runs: 2

    - name: Trigger Convert Workflow  
      if: success()
      uses: peter-evans/repository-dispatch@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        event-type: trigger-convert

    # 添加工作流状态检查
    - name: Set Workflow Status
      if: always()
      run: |
        echo "SYNC_STATUS=${{ job.status }}" >> $GITHUB_ENV
        echo "SYNC_TIME=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_ENV
