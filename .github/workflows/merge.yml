name: Merge & Bundle Modules Collection

on:
  repository_dispatch:
    types: [trigger-merge]
  workflow_dispatch:

# 并发控制，避免重复合并操作
concurrency:
  group: merge-workflow
  cancel-in-progress: false  # 不取消正在进行的任务

jobs:
  merge_files:
    runs-on: ubuntu-latest

    steps:
      # 添加等待检查
      - name: Wait for prerequisites
        run: |
          echo "Starting merge workflow..."
          sleep 5  # 给予短暂延迟确保资源就绪
          
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Run merge script
        run: npm run merge

      - name: Check output directory
        run: |
          mkdir -p Surge/Modules/Rules
          mkdir -p Surge/Scripts

      # 文件现在直接保存到最终位置，不需要复制步骤
      # - name: Copy all sgmodules to Surge/Modules
      #   run: |
      #     # 复制所有sgmodule文件
      #     cp Chores/sgmodule/*.sgmodule Surge/Modules/
      #     # 确保文件权限正确
      #     chmod 644 Surge/Modules/*.sgmodule
      #     
      #     # 复制完成后清空源目录中的普通模块文件(保留合并后的All-in-One-2.x.sgmodule)
      #     find Chores/sgmodule -type f -name "*.sgmodule" ! -name "All-in-One-2.x.sgmodule" -exec rm {} \;
      #     echo "已清空 Chores/sgmodule 目录中的普通模块文件"

      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add Surge/Modules/All-in-One-2.x.sgmodule Surge/Modules/Rules/*.list
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update merged All-in-One-2.x.sgmodule and reject list"
            git push
          fi

      - name: Trigger Check Rules Workflow
        if: success()
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: trigger-check-rules

      - name: Trigger Deploy Workflow
        if: success()
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: trigger-deploy

        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
