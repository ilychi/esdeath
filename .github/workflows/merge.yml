name: Merge & Bundle Modules Collection

on:
  repository_dispatch:
    types: [trigger-merge]
  workflow_dispatch:
  schedule:
    - cron: '7,32,57 * * * *' 

# 并发控制，避免重复合并操作
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  merge_files:
    name: Merge Modules
    runs-on: ubuntu-latest

    steps:
      - name: 获取当前日期
        id: date
        run: |
          echo "date=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_OUTPUT
          echo "year=$(date +'%Y')" >> $GITHUB_OUTPUT
          echo "month=$(date +'%m')" >> $GITHUB_OUTPUT
          echo "day=$(date +'%d')" >> $GITHUB_OUTPUT
          echo "hour=$(date +'%H')" >> $GITHUB_OUTPUT
          echo "minute=$(date +'%M')" >> $GITHUB_OUTPUT
          echo "second=$(date +'%S')" >> $GITHUB_OUTPUT
      
      - name: 恢复缓存
        uses: actions/cache/restore@v4
        id: cache-restore
        with:
          path: |
            .cache
          key: ${{ runner.os }}-v3-${{ steps.date.outputs.year }}-${{ steps.date.outputs.month }}-${{ steps.date.outputs.day }} ${{ steps.date.outputs.hour }}:${{ steps.date.outputs.minute }}:${{ steps.date.outputs.second }}
          restore-keys: |
            ${{ runner.os }}-v3-${{ steps.date.outputs.year }}-${{ steps.date.outputs.month }}-${{ steps.date.outputs.day }} ${{ steps.date.outputs.hour }}:${{ steps.date.outputs.minute }}:
            ${{ runner.os }}-v3-${{ steps.date.outputs.year }}-${{ steps.date.outputs.month }}-${{ steps.date.outputs.day }} ${{ steps.date.outputs.hour }}:
            ${{ runner.os }}-v3-${{ steps.date.outputs.year }}-${{ steps.date.outputs.month }}-${{ steps.date.outputs.day }}
            ${{ runner.os }}-v3-${{ steps.date.outputs.year }}-${{ steps.date.outputs.month }}-
            ${{ runner.os }}-v3-${{ steps.date.outputs.year }}-
            ${{ runner.os }}-v3-
            
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置PNPM
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: 设置Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".node-version"
          cache: "pnpm"

      - name: 安装依赖
        run: pnpm install

      - name: 运行合并脚本
        run: pnpm run merge

      - name: 检查输出目录
        run: |
          mkdir -p Surge/Modules/Rules
          mkdir -p Surge/Scripts

      # 文件现在直接保存到最终位置，不需要复制步骤
      # - name: Copy all sgmodules to Surge/Modules
      #   run: |
      #     # 复制所有sgmodule文件
      #     cp Chores/sgmodule/*.sgmodule Surge/Modules/
      #     # 确保文件权限正确
      #     chmod 644 Surge/Modules/*.sgmodule
      #     
      #     # 复制完成后清空源目录中的普通模块文件(保留合并后的All-in-One-2.x.sgmodule)
      #     find Chores/sgmodule -type f -name "*.sgmodule" ! -name "All-in-One-2.x.sgmodule" -exec rm {} \;
      #     echo "已清空 Chores/sgmodule 目录中的普通模块文件"

      - name: 提交并推送更改
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add Surge/Modules/All-in-One-2.x.sgmodule Surge/Modules/Rules/*.list
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update merged All-in-One-2.x.sgmodule and reject list"
            git push
          fi

      - name: 触发规则检查工作流
        if: success()
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: trigger-check-rules

      - name: 触发部署工作流
        if: success()
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: trigger-deploy

      - name: 保存缓存
        if: always()
        uses: actions/cache/save@v4
        with:
          path: |
            .cache
          key: ${{ runner.os }}-v3-${{ steps.date.outputs.year }}-${{ steps.date.outputs.month }}-${{ steps.date.outputs.day }} ${{ steps.date.outputs.hour }}:${{ steps.date.outputs.minute }}:${{ steps.date.outputs.second }}
        
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
