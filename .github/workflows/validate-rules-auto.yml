name: Auto Rules Validation (Syntax Only)

on:
  workflow_dispatch:
  schedule:
    # 每日凌晨2点自动检查
    - cron: "0 2 * * *"

# 避免重复运行
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  validate-syntax:
    name: 验证规则语法
    runs-on: ubuntu-latest
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            Surge
            Dial
            Chores
            Source
          sparse-checkout-cone-mode: false

      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: 安装依赖
        run: |
          cd Chores/engineering
          npm ci --prefer-offline --no-audit
          
      - name: 运行语法验证
        id: validate
        run: |
          cd Chores/engineering
          echo "开始每日规则语法验证..."
          mkdir -p .cache
          
          # 语法验证
          echo "验证规则语法..."
          NODE_OPTIONS="--experimental-specifier-resolution=node" tsx build/scripts/validate-rule-syntax.ts || true
          
          # 验证非法 TLD
          echo "验证非法 TLD..."
          NODE_OPTIONS="--experimental-specifier-resolution=node" tsx build/scripts/validate-illegal-tld.ts || true
          
          # 检测哈希冲突
          echo "检测哈希冲突..."
          NODE_OPTIONS="--experimental-specifier-resolution=node" tsx build/scripts/detect-hash-collisions.ts || true
          
          # 收集错误统计
          syntax_errors=$([ -f ".cache/syntax-errors.json" ] && jq length .cache/syntax-errors.json 2>/dev/null || echo "0")
          tld_errors=$([ -f ".cache/illegal-tld-errors.json" ] && jq length .cache/illegal-tld-errors.json 2>/dev/null || echo "0")
          hash_errors=$([ -f ".cache/hash-collisions.json" ] && jq length .cache/hash-collisions.json 2>/dev/null || echo "0")
          
          total_errors=$((syntax_errors + tld_errors + hash_errors))
          
          # 生成报告
          echo "## 📊 每日语法验证报告" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **运行时间**: $(TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M:%S')" >> $GITHUB_STEP_SUMMARY
          echo "- **语法错误**: $syntax_errors 个" >> $GITHUB_STEP_SUMMARY
          echo "- **非法TLD**: $tld_errors 个" >> $GITHUB_STEP_SUMMARY
          echo "- **哈希冲突**: $hash_errors 个" >> $GITHUB_STEP_SUMMARY
          echo "- **总错误数**: $total_errors 个" >> $GITHUB_STEP_SUMMARY
          
          if [ "$total_errors" -gt "0" ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "⚠️ 发现 $total_errors 个错误，请检查日志获取详细信息。" >> $GITHUB_STEP_SUMMARY
          else
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "✅ 所有规则验证通过！" >> $GITHUB_STEP_SUMMARY
          fi
          
      - name: 上传错误报告
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: validation-errors-${{ github.run_id }}
          path: |
            Chores/engineering/.cache/*-errors.json
            Chores/engineering/.cache/hash-collisions.json
          retention-days: 7
          if-no-files-found: ignore
